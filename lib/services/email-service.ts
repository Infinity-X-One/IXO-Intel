import { API_CONFIG } from "@/lib/config/api-keys"

export interface EmailData {
  to: string[]
  subject: string
  html: string
  text?: string
  from?: string
}

// Email service using Resend
export async function sendEmail(emailData: EmailData): Promise<boolean> {
  try {
    const response = await fetch("https://api.resend.com/emails", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${API_CONFIG.RESEND_API_KEY}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        from: emailData.from || "Infinity X One <noreply@infinityx1.com>",
        to: emailData.to,
        subject: emailData.subject,
        html: emailData.html,
        text: emailData.text,
      }),
    })

    if (!response.ok) throw new Error("Failed to send email")

    return true
  } catch (error) {
    console.error("Error sending email:", error)
    return false
  }
}

// Send prediction alert email
export async function sendPredictionAlert(prediction: any, recipients: string[]): Promise<boolean> {
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <h2 style="color: #39FF14;">New Prediction Alert</h2>
      <div style="background: #1a1a1a; padding: 20px; border-radius: 8px; color: white;">
        <h3>${prediction.asset_symbol} - ${prediction.prediction_direction}</h3>
        <p><strong>Confidence:</strong> ${(prediction.confidence_score * 100).toFixed(1)}%</p>
        <p><strong>Signal Type:</strong> ${prediction.signal_type}</p>
        <p><strong>Reasoning:</strong> ${prediction.reasons}</p>
        <p><strong>Created:</strong> ${new Date(prediction.prediction_timestamp).toLocaleString()}</p>
      </div>
      <p style="margin-top: 20px; color: #666;">
        This alert was generated by your Infinity X One Intelligence platform.
      </p>
    </div>
  `

  return await sendEmail({
    to: recipients,
    subject: `ðŸš¨ New Prediction: ${prediction.asset_symbol} ${prediction.prediction_direction}`,
    html,
    text: `New prediction for ${prediction.asset_symbol}: ${prediction.prediction_direction} with ${(prediction.confidence_score * 100).toFixed(1)}% confidence.`,
  })
}
